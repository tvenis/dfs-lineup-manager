name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend build
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: false
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Comprehensive repository debugging
      run: |
        echo "=== Git status ==="
        git status
        echo "=== Git remote ==="
        git remote -v
        echo "=== Git branch ==="
        git branch -a
        echo "=== Root directory contents ==="
        ls -la
        echo "=== Web directory contents ==="
        ls -la web/
        echo "=== Web directory exists? ==="
        if [ -d "web" ]; then
          echo "web directory exists"
          echo "=== Web directory permissions ==="
          ls -ld web/
        else
          echo "web directory does not exist"
        fi
        echo "=== Web package.json exists? ==="
        if [ -f "web/package.json" ]; then
          echo "web/package.json exists"
          echo "=== Web package.json contents ==="
          cat web/package.json
        else
          echo "web/package.json does not exist"
        fi
        echo "=== Repository structure ==="
        find . -type f -name "*.json" -o -name "*.tsx" -o -name "*.ts" | head -20
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        cd web
        npm install
        echo "Dependencies installed successfully"
    
    - name: Build application
      run: |
        echo "Building application..."
        cd web
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "Running Next.js build directly..."
        npx next build
        echo "Build completed successfully"
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'http://localhost:8000' }}

  # Backend verification
  backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: false
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        echo "Installing Python dependencies..."
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Python dependencies installed successfully"
    
    - name: Verify backend setup
      run: |
        echo "Verifying backend setup..."
        cd backend
        python -c "import fastapi; print('FastAPI imported successfully')"
        python -c "import sqlalchemy; print('SQLAlchemy imported successfully')"
        echo "Backend verification completed"

  # Deploy to Vercel (only on main branch)
  deploy:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: false
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./web
